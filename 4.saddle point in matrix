#include <stdio.h>

int main() {
    int matrix[100][100];
    int rows, cols, i, j;
    int saddlePointExists = 0;

    printf("Enter the number of rows and columns of the matrix: ");
    scanf("%d %d", &rows, &cols);

    if (rows <= 0 || cols <= 0 || rows > 100 || cols > 100) {
        printf("Invalid dimensions!\n");
        return 0;
    }

    printf("Enter the elements of the matrix:\n");
    for (i = 0; i < rows; i++) {
        for (j = 0; j < cols; j++) {
            printf("Element at position (%d, %d): ", i + 1, j + 1);
            scanf("%d", &matrix[i][j]);
        }
    }

    printf("Matrix:\n");
    for (i = 0; i < rows; i++) {
        for (j = 0; j < cols; j++) {
            printf("%d ", matrix[i][j]);
        }
        printf("\n");
    }

    // Find saddle point
    for (i = 0; i < rows; i++) {
        int minRowValue = matrix[i][0];
        int minColIndex = 0;
        for (j = 1; j < cols; j++) {
            if (matrix[i][j] < minRowValue) {
                minRowValue = matrix[i][j];
                minColIndex = j;
            }
        }

        int maxColValue = matrix[0][minColIndex];
        int maxRowIndex = 0;
        for (j = 1; j < rows; j++) {
            if (matrix[j][minColIndex] > maxColValue) {
                maxColValue = matrix[j][minColIndex];
                maxRowIndex = j;
            }
        }

        if (maxRowIndex == i) {
            printf("Saddle point found at position (%d, %d) with value %d\n", i + 1, minColIndex + 1, matrix[i][minColIndex]);
            saddlePointExists = 1;
        }
    }

    if (!saddlePointExists) {
        printf("No saddle point found in the matrix\n");
    }

    return 0;
}

/**
output
-------
Enter the number of rows and columns of the matrix: 2 3
Enter the elements of the matrix:
Element at position (1, 1): 5
Element at position (1, 2): 2
Element at position (1, 3): 6
Element at position (2, 1): 2
Element at position (2, 2): 4
Element at position (2, 3): 7
Matrix:
5 2 6 
2 4 7 
No saddle point found in the matrix
**/
